{"version":3,"sources":["components/ChampModal.js","components/ChampIcon.js","pages/Champions.js","App.js","serviceWorker.js","index.js"],"names":["components_ChampModal","props","_useState","useState","_useState2","Object","slicedToArray","selectedSkill","setSelectedSkill","_useState3","_useState4","titleSkill","setTitleSkill","useEffect","champion","style","backgroundImage","concat","backgroundPosition","backgroundSize","setSkill","mode","skill","mapStats","statClass","statType","accum","descrip","cssClass","acronm","react_default","a","createElement","className","src","alt","onClick","toUpperCase","components_ChampIcon","imgsrc","id","text","htmlFor","pages_Champions","data","setData","choosenModal","setChoosenModal","_useState5","_useState6","modalIsOpen","setModalIsOpen","_useState7","_useState8","isCompareSelected","setIsCompareSelected","_useState9","_useState10","arrayChamp","setArrayChamp","fetch","then","response","json","values","console","log","href","target","rel","map","champ","index","source","full","key","hasAlready","findIndex","current","splice","toConsumableArray","objectSpread","compare","lib_default","isOpen","onRequestClose","onClickClose","App","react_router_dom","react_router","path","exact","component","Champions","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.79cf6f69.chunk.js","sourcesContent":["import React, {useState, useEffect} from 'react';\nimport './ChampModal.css';\n\nexport default function (props) {\n\n  const [selectedSkill, setSelectedSkill] = useState(\"\");\n  const [titleSkill, setTitleSkill] = useState(\"\");\n\n  useEffect(() => {\n    setSelectedSkill(props.champion[\"passive\"][\"description\"]);\n    setTitleSkill(props.champion[\"passive\"][\"name\"]);\n  }, [props.champion])\n\n  const style = {\n    backgroundImage: `url(https://ddragon.leagueoflegends.com/cdn/img/champion/splash/${props.champion[\"id\"]}_0.jpg)`,\n    backgroundPosition: \"center\",\n    backgroundSize: \"cover\",\n  }\n\n  function setSkill(mode, skill){\n    if(mode === \"passive\") {\n      setTitleSkill(props.champion[mode][\"name\"]);\n      setSelectedSkill(props.champion[mode][\"description\"]);\n    }else{ \n      setTitleSkill(props.champion[mode][skill][\"name\"]);\n      setSelectedSkill(props.champion[mode][skill][\"description\"])\n    }\n  }\n\n  function mapStats(statClass, statType, accum, descrip){\n    const cssClass = `stats ${statClass}`;\n    let acronm = \"\";\n    if(accum !== \"none\") {\n      acronm = `(+${props.champion[\"stats\"][accum]} por nível)` \n    }\n    return <p className=\"stats-format\">\n      <span className={cssClass}>\n        {descrip}:\n      </span>\n      <p className=\"stat-descrip\">{props.champion[\"stats\"][statType]} {acronm}</p>\n    </p>\n  }\n\n  return(\n  <section className=\"main-modal\" style={style}>\n    <main className=\"grid\">\n      <img className=\"image-profile\" src={`https://ddragon.leagueoflegends.com/cdn/9.13.1/img/champion/${props.champion[\"id\"]}.png`} alt=\"Imagem do Campeão\"></img>\n      <section className=\"skill-profile\">\n        <h1 className=\"ta-center\" >HABILIDADES</h1>\n        <img onClick={() => setSkill(\"passive\")} src={`https://ddragon.leagueoflegends.com/cdn/9.13.1/img/passive/${props.champion[\"passive\"][\"image\"][\"full\"]}`} alt=\"passive\"></img>\n        <img onClick={() => setSkill(\"spells\", \"0\")} src={`https://ddragon.leagueoflegends.com/cdn/9.13.1/img/spell/${props.champion[\"spells\"][\"0\"][\"image\"][\"full\"]}`} alt=\"Skill Q\"></img>\n        <img onClick={() => setSkill(\"spells\", \"1\")} src={`https://ddragon.leagueoflegends.com/cdn/9.13.1/img/spell/${props.champion[\"spells\"][\"1\"][\"image\"][\"full\"]}`} alt=\"Skill W\" ></img>\n        <img onClick={() => setSkill(\"spells\", \"2\")} src={`https://ddragon.leagueoflegends.com/cdn/9.13.1/img/spell/${props.champion[\"spells\"][\"2\"][\"image\"][\"full\"]}`} alt=\"Skill E\"></img>\n        <img onClick={() => setSkill(\"spells\", \"3\")} src={`https://ddragon.leagueoflegends.com/cdn/9.13.1/img/spell/${props.champion[\"spells\"][\"3\"][\"image\"][\"full\"]}`} alt=\"Skill R\"></img>\n      </section>\n      <article className=\"skill-descrip-profile\">\n        <p className=\"ta-center\">{titleSkill.toUpperCase()}</p>\n        <p>{selectedSkill}</p>\n      </article>\n      <section className=\"content-modal\">\n        <article className=\"about-champion-modal\">\n          <h1 className=\"title-profile ta-center\">{props.champion[\"name\"].toUpperCase()}</h1>\n          <article className=\"descrip-profile\">\n            <p>{props.champion[\"lore\"]}</p>\n          </article>\n        </article>\n        <div className=\"block-stat\">\n          <section className=\"first-block-stat\">\n            {mapStats(\"stat-hp\", \"hp\", \"hpperlevel\", \"Vida\")}\n            {mapStats(\"stat-ad\", \"attackdamage\", \"attackdamageperlevel\", \"Dano de Ataque\")}\n            {mapStats(\"stat-velat\", \"attackspeed\", \"attackspeedperlevel\", \"Velocidade de Ataque\")}\n            {mapStats(\"stat-ms\", \"movespeed\", \"none\", \"Velocidade de Movimento\")}\n          </section>\n          <section className=\"second-block-stat\">\n            {mapStats(\"stat-reghp\", \"hpregen\", \"hpregenperlevel\", \"Regeneração de Vida\")}\n            {mapStats(\"stat-armor\", \"armor\", \"armorperlevel\", \"Armadura\")}\n            {mapStats(\"stat-mr\", \"spellblock\", \"spellblockperlevel\", \"Resistência Mágica\")}\n          </section>\n        </div>\n      </section>\n    </main>\n  </section>\n  );\n}","import React from 'react';\nimport './ChampIcon.css'\n\nexport default function (props) {\n    return (\n        <section className=\"champion\" onClick={props.onClick}>\n        <img src ={props.imgsrc} id={props.id} alt={props.text} className=\"champ-img\" />\n        <section>\n          <p htmlFor={props.id} className=\"champ-name\">{props.text}</p>\n        </section>\n      </section>\n    );\n}","import React, {useState, useEffect} from 'react';\nimport Modal from 'react-modal';\nimport ChampModal from '../components/ChampModal'\nimport ChampIcon from '../components/ChampIcon';\nimport Chart from '../components/Chart';\nimport './Champions.css'\n\nexport default function (props) {\n  const [data, setData] = useState([]);\n  const [choosenModal, setChoosenModal] = useState({})\n  const [modalIsOpen, setModalIsOpen] = useState(false);\n  const [isCompareSelected, setIsCompareSelected] = useState(false);\n  const [arrayChamp, setArrayChamp] = useState([]);\n\nuseEffect(() => {\n  fetch('https://ddragon.leagueoflegends.com/cdn/9.13.1/data/pt_BR/championFull.json')\n  .then(response => response.json())\n  .then(values =>  setData(Object.values(values[\"data\"])))\n}, [])\n\nuseEffect(() => {\n  console.log(arrayChamp)\n}, [arrayChamp])\n\nfunction showChampions(currentArray){\n  return currentArray.map((champ, index) => {\n    const source = \"https://ddragon.leagueoflegends.com/cdn/9.13.1/img/champion/\" + champ[\"image\"].full;\n    return <ChampIcon id={champ[\"id\"]} key={index} text={champ[\"name\"]} imgsrc={source}\n    onClick={() => { isCompareSelected ? compare(champ) : setModalIsOpen(true); setChoosenModal(champ);}}/>\n  })\n}\n\nfunction compare(champ) {\n  const hasAlready = arrayChamp.findIndex(current => current.id === champ.id);\n  hasAlready !== -1 ?\n  arrayChamp.splice(hasAlready, 1) : setArrayChamp(() => { return [...arrayChamp, { ...champ}] })\n}\n\n  return (\n    <div className=\"div-main\">\n      <nav className=\"header-nav\">\n        <ul className=\"nav-ul\">\n          <li><a className=\"nav-li\" href=\"index.html\">Sobre</a></li>\n          <li><a className=\"nav-li\" href=\"champions.html\">Campeões</a></li>\n          <li><a className=\"nav-li\" href=\"https://signup.br.leagueoflegends.com/pt/signup/index#/\" target=\"_blank\" rel=\"noopener noreferrer\">Jogue!</a></li>\n        </ul>\n      </nav>\n      <button onClick={() => setIsCompareSelected(!isCompareSelected)}>compare</button>\n      {/* <Chart chartValues={arrayChamp}></Chart> */}\n      <section className=\"champion-list\">\n        {showChampions(data)}\n      </section>\n      <Modal className=\"modal-style\" isOpen={modalIsOpen} onRequestClose={()=>setModalIsOpen(false)}>\n        <ChampModal champion={choosenModal} onClickClose={()=>setModalIsOpen(false)}/>\n      </Modal>\n    </div>\n  );\n}","import React from 'react';\n// import Home from './pages/Home';\nimport Champions from './pages/Champions';\nimport {BrowserRouter as Router, Route} from 'react-router-dom';\n\nfunction App() {\n  return (\n    <Router>\n      <Route path=\"/\" exact component={Champions} />\n      {/* <Route path=\"/champions\" exact component={Home} /> */}\n    </Router>\n  );\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}